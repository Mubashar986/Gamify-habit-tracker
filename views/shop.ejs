<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Habitica Market</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <style>
        :root {
            --primary-purple: #4f2a93;
            --light-bg: #e1e0e3;
            --border-color: #c3c0c7;
            --card-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--light-bg);
            margin: 0;
            padding: 0;
        }

        .market-container {
            max-width: 1200px;
            margin: 20px auto;
        }

        .sidebar {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: var(--card-shadow);
            height: 100%;
        }

        .sidebar h2 {
            color: var(--primary-purple);
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .filter-option {
            margin-bottom: 15px;
        }

        .filter-option label {
            font-weight: 500;
            color: #333;
        }

        .items-section h2 {
            color: var(--primary-purple);
            margin-bottom: 1rem;
            font-size: 1.8rem;
            border-bottom: 2px solid var(--primary-purple);
            padding-bottom: 0.5rem;
        }

        .items-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .item-card {
            background: white;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 1rem;
            text-align: center;
            box-shadow: var(--card-shadow);
            transition: transform 0.2s ease-in-out;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .item-card:hover {
            transform: translateY(-5px);
        }

        .item-card img {
            width: 100px;
            height: 100px;
            margin: 0 auto 1rem;
            object-fit: contain;
        }

        .item-card h4 {
            font-size: 1.1rem;
            color: var(--primary-purple);
            margin-bottom: 0.5rem;
        }

        .item-card .description {
            flex-grow: 1;
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 1rem;
        }

        .item-card .cost {
            font-weight: bold;
            margin: 0.5rem 0;
            font-size: 1.1rem;
            color: #28a745;
        }

        button {
            background-color: var(--primary-purple);
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            transition: background-color 0.2s ease-in-out;
        }

        button:hover:not(:disabled) {
            background-color: #3a1f6e;
        }

        button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <%- include('partials/header.ejs') %>
    <main class="container market-container">
        <div class="row">
            <!-- Sidebar -->
            <aside class="col-md-3 mb-4">
                <div class="sidebar">
                    <h2>Category</h2>
                    <div class="form-check filter-option">
                        <input class="form-check-input" type="checkbox" id="filter-potions" value="potions">
                        <label class="form-check-label" for="filter-potions">Potions</label>
                    </div>
                    <div class="form-check filter-option">
                        <input class="form-check-input" type="checkbox" id="filter-avatars" value="avatars">
                        <label class="form-check-label" for="filter-avatars">Avatars</label>
                    </div>
                </div>
            </aside>

            <!-- Items Section -->
            <section class="col-md-9 items-section">
                <!-- Potions Section -->
                <h2>Potions</h2>
                <div class="items-grid" id="potionsGrid">
                    <% purchasedPotions.concat(notPurchasedPotions).forEach(potion => { %>
                    <div class="item-card potion">
                        <img src="/<%= potion.imageURL %>" alt="<%= potion.name %>" class="img-fluid">
                        <h4><%= potion.name %></h4>
                        <p class="description"><%= potion.description %></p>
                        <div class="cost"><%= potion.cost %> ðŸª™</div>
                        <% if (purchasedPotions.some(p => p._id.toString() === potion._id.toString())) { %>
                            <button class="btn btn-secondary" disabled>Already Bought</button>
                        <% } else { %>
                            <form action="/shop/buy-potion/<%= potion._id %>" method="POST">
                                <% if (user.coins < potion.cost) { %>
                                <button type="submit" class="btn btn-secondary" disabled>Not enough coins</button>
                                <% } else { %>
                                <button type="submit" class="btn btn-primary">Buy</button>
                                <% } %>
                            </form>
                        <% } %>
                    </div>
                    <% }); %>
                </div>

                <!-- Avatars Section -->
                <h2>Avatars</h2>
                <div class="items-grid" id="avatarsGrid">
                    <% avatars.forEach(avatar => { %>
                    <div class="item-card avatar">
                        <img src="/<%= avatar.imageURL %>" alt="<%= avatar.name %>" class="img-fluid">
                        <h4><%= avatar.name %></h4>
                        <p class="description"><%= avatar.description %></p>
                        <div class="cost"><%= avatar.cost %> ðŸª™</div>
                        <form action="/shop/buy-avatar/<%= avatar._id %>" method="POST">
                            <% if (user.coins < avatar.cost || String(user.avatar.avatarId) === String(avatar._id)) { %>
                            <button type="submit" class="btn btn-secondary" disabled>
                                <%= String(user.avatar.avatarId) === String(avatar._id) ? "Already Bought" : "Not enough coins" %>
                            </button>
                            <% } else { %>
                            <button type="submit" class="btn btn-primary">Buy</button>
                            <% } %>
                        </form>
                    </div>
                    <% }); %>
                </div>
            </section>
        </div>

        

    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
    const filterCheckboxes = document.querySelectorAll('.filter-option input');
    const potionsGrid = document.getElementById('potionsGrid');
    const avatarsGrid = document.getElementById('avatarsGrid');

    function filterItems() {
        const selectedFilters = Array.from(filterCheckboxes)
            .filter(checkbox => checkbox.checked)
            .map(checkbox => checkbox.value);

        // Show or hide the potions section
        if (selectedFilters.includes('potions') || selectedFilters.length === 0) {
            potionsGrid.style.display = 'grid'; // Use grid to preserve layout
        } else {
            potionsGrid.style.display = 'none';
        }

        // Show or hide the avatars section
        if (selectedFilters.includes('avatars') || selectedFilters.length === 0) {
            avatarsGrid.style.display = 'grid'; // Use grid to preserve layout
        } else {
            avatarsGrid.style.display = 'none';
        }
    }

    // Attach the event listeners to checkboxes
    filterCheckboxes.forEach(checkbox => checkbox.addEventListener('change', filterItems));
});

    </script>
</body>
</html>

